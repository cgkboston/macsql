#!/bin/tcsh
set noglob
set bangMinus = 0
set putOrGet = `echo $1 | awk '{print substr($1,1,1)}'`
if ($putOrGet == ) then
    exit 0
endif
touch $MACSQL_HOME/db/history.dat
set w = `wc -l $MACSQL_HOME/db/history.dat|awk '{print $1}'`
@ w++
set bang = 
if ("$putOrGet" != "!") then
    echo $w'	'$* >> $MACSQL_HOME/db/history.dat
    if ($1 == history) then
	cat $MACSQL_HOME/db/history.dat
    endif
    exit 0
else
    set putOrGet = `echo $1 | awk '{print substr($1,2,1)}'`
    if ("$putOrGet" == "-") then
	set num = `wc -l $MACSQL_HOME/db/history.dat | awk '{print $1}'`
	@ num -= `echo $1 | awk '{printf("%d",substr($1,3))}'`
	@ num++
	set bang = `echo $* | awk '{print substr($1,2)}'`
	set bangMinus = 1
    else
	set num = `echo $1 | awk '{printf("%d",substr($1,2))}'`
    endif
    if ($num == 0) then
	set bang = `echo $* | awk '{print substr($1,2)}'`
	set len = `echo $bang | awk '{print length}'`
	set count = 0
	while ($count < $w)
	    @ count++
	    set bangVal = `head -$count $MACSQL_HOME/db/history.dat | tail -1 | awk '{print $2}'`
	    set bangVal = `echo $len $bangVal | awk '{print substr($2,1,$1)}'`
	    if ($bang == $bangVal) then
		set num = $count
	    endif
	end
    	if ($num == 0) then
	    exit 1
	endif
    endif
    set parameters = `head -$num $MACSQL_HOME/db/history.dat|tail -1`
    set count = 1
    set newParms = 
    set newNum = `echo $parameters | awk '{print NF}'`
    while ($count < $newNum)
	@ count++
	if ("$newParms" == "") then
	    set newParms = $parameters[$count]
	else
	    set newParms = "$newParms $parameters[$count]"
	endif
    end
    set parameters = "$newParms"
    echo $bang | grep \:s >& /dev/null
    if ($status == 0) then
	set bang = `echo $* | awk -F":s" '{print $2}'`
	if ($bangMinus == 1) then
	    set parameters = `echo $parameters | sed -e s$bang\g`
	else
# what is this for ??
	    set len = `echo $parameters | awk '{print length($1)}'`
	    set len = `echo $len 2 \* p | dc`
	    set new = `echo $len $parameters | awk '{print substr($0,$1)}'`
	endif
# the following is for !-x withAppendString
    else if ($bangMinus == 1) then
	set appendNf = `echo $* | awk '{print NF}'`
	set appcnt = 1
	set append = 
	set initstr = "$*"
	while ($appcnt < $appendNf)
	    @ appcnt++
	    set appendTo = `echo $initstr $appcnt | awk '{print $($NF)}'`
	    set append = "$append $appendTo"
	end
	set parameters = "$parameters $append"
    endif
    echo $w'	'$parameters >> $MACSQL_HOME/db/history.dat
    if ("$parameters" == "history") then
	cat ../db/history.dat
	exit $status
    else
	if ($bang != \  && `echo $bang | grep :s` == 0) then
	    set parameters = `echo $parameters | sed -e s$bang`
	endif
	set scr = `echo $parameters | awk '{print $1}'`
	set scr = `basename $scr`
	if (-f $MACSQL_HOME/bin/$scr) then
	    $MACSQL_HOME/bin/$parameters
	    set statVal = $status
	else
	    unset noglob
	    $parameters
	    set statVal = $status
	    set noglob
	endif
	exit $statVal
    endif
endif
